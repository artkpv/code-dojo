using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;

public class SquareDigits
{	
	public int CalculateDigits(int integer)
	{
		int result = 0;
		string integerStr = integer.ToString();
		for(int i=0; i < integerStr.Length; i++)
		{
			result += (int)Math.Pow(int.Parse(integerStr[i].ToString()), 2);
		}
		return result;
	}
	public int smallestResult(int param0)
	{
		int calculatedDigits ;
		List<int> sequance  = new List<int>();
		for(int i=0; i < 100000; i++)
		{
			//Console.WriteLine("i=" + i);
			sequance.Clear();
			calculatedDigits = i;
			while(true)
			{
				calculatedDigits = CalculateDigits(calculatedDigits);
				
				if(sequance.Contains(calculatedDigits))
					break;
				
				if(param0 == calculatedDigits)
				{
					Console.WriteLine("Result:" + param0 + " " + i);
					return i;
				}
				
				sequance.Add(calculatedDigits);
				//Console.WriteLine(calculatedDigits);
			} 
		}
		
		return -1;
	}

	#region Testing code generated by KawigiEdit
	[STAThread]
	public static void Main(string[] args)
	{
		int answer, desiredAnswer;
		bool errors = false;
		DateTime time;
		
		
		SquareDigits sd = new SquareDigits();
		errors = sd.smallestResult(1) != 1;
		if(!errors) errors = sd.smallestResult(19) != 133;
		if(!errors) errors = sd.smallestResult(85) != 5;
		if(!errors) errors = sd.smallestResult(112) != 2666;
		
		
		
		if (errors)
			Console.WriteLine("Some of the test cases had errors :-(");
		else
			Console.WriteLine("You're a stud (at least on the test data)! :-D ");
	}
	#endregion

}
//Powered by [KawigiEdit] 2.0!

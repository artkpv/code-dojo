using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;

public class Prerequisites
{
	public string[] orderClasses(string[] param0)
	{
		List<string> orderedClasses = new List<string>(param0.Length);
				
		for(int i=0; i< param0.Length; i++)
		{
			string class1 = param0[i];
			
			int position = orderedClasses.Count + 1;
			for(int j=0; j<orderedClasses.Count; j++)
			{
				string class2 = orderedClasses[j];
				if(Compare(class1, class2) > 0)
				{	
					position = j;
					break;
				}
			}
			
			orderedClasses.Insert(position, class1);
		}
		
		
		string[] output = new string[orderedClasses.Count];
		for(int i=0;i<orderedClasses.Count; i++)
		{
			output[i] = Regex.Match(orderedClasses[i], @"\w+\d+").Value;
		}
		return output;
		
	}
	
	private int Compare(string class1, string class2)
	{
		string name2 = class2.Substring(0, class2.IndexOf(':'));
		if(class1.Contains(name2))
			return 1;
		if(Regex.Match(class1, "\\d+").Value.CompareTo(Regex.Match(class2, "\\d+").Value) > 0)
			return 1;
		if(class1.Substring(0, class1.IndexOf(':')).CompareTo(name2) > 0)
			return 1;
		return -1;
	}

	#region Testing code generated by KawigiEdit
	[STAThread]
	public static void Main(string[] args)
	{
		string[] answer, desiredAnswer;
		bool errors = false;
		bool same;
		DateTime time;
		
		
		
		string[] str = new string[] { "CSE121: CSE110", "CSE110:", "MATH122:"};
		desiredAnswer = new string[] {"CSE110","CSE121","MATH122"};
		
		Prerequisites p = new Prerequisites();
		answer = p.orderClasses(str);
		errors = answer.Length == desiredAnswer.Length;
		if(!errors)
			for(int i=0; i< answer.Length; i++)
			{
				if(!errors) errors = desiredAnswer[i] == answer[i];
			}
		
		
		if (errors)
			Console.WriteLine("Some of the test cases had errors :-(");
		else
			Console.WriteLine("You're a stud (at least on the test data)! :-D ");
	}
	#endregion

}
//Powered by [KawigiEdit] 2.0!
